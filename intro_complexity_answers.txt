

    1-An algorithm that has O(1) is a drag car going down a straight line and an algorithm that has O(2n) is a paper airplane trying to fly almost straight up.

    2-The best scenario for binary search is that the required element is the central element and only one iteration is needed to find it. That would make O (1).

    3-The worst-case scenario for binary search is that your item is the last possible option to choose. In a binary search, it can take 8 iterations (if you have 256 elements), or O(log n).

    4-Interestingly, the bounded case for binary search is O(log n), which is exactly the same thing as its worst-case scenario.

    5-https://docs.google.com/spreadsheets/d/1JgwA2CiOykjfRMcao2kUS2IawlxWwRDkq8iyMzwkK6k/edit?usp=sharing

    6-The limit of the function when n approaches ∞ is ∞.

    7-the Big-O of an algorithm with data points of (1,2), (2, 4), (3, 8), (4, 16) is O(nlogn).

    8-see attached commit

    9-https://docs.google.com/spreadsheets/d/1mdu3ALG59nelTuFORYyk8fKiziNTeARwBVN2HF4UTXo/edit?usp=sharing

    10-O(log n)

    11-O(1)

    12-O(log n)
